<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XMLSpy v2010 rel. 3 sp1 (x64) (http://www.altova.com)-->
<response xsi:schemaLocation="https://github.com/erasmus-without-paper/ewp-specs-api-institutions/tree/master response.xsd" xmlns="https://github.com/erasmus-without-paper/ewp-specs-api-institutions/tree/master" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <institution id="String">
        <!--
        Wojtek's comment: I think we should stick with a single "ID element naming
        vocabulary" to avoid confusion. We have already done it this way in the
        Registry API (this also has the benefit of properly distinguishing the
        "primary" primary key):
            <id>uio.no</id>
            <other-id type='erasmus'>N Oslo01</other-id>
            <other-id type='local'>UIO</other-id>
        (Also, probably we should drop one of the IDs, because we have one in the
        attribute, and one in the element. I would drop the attribute.)
        -->
        <!--
        Kai's comments: I agree with all of the above, except maybe for having the
        IDs "flat": Since an ID can potentially consist of more than one component,
        we would need it to be structured in those cases - and I think it would be
        confusing to drop the component level when there is only one component.
        Even when removing leading institution and org.unit components, the ToRs
        example has 3 components (although they are enclosed in a -ref element
        instead of an id, but logically it amounts to the same thing).
        -->
        <!--
        Wojtek's comment: I believe that your proposal is not compatible with XML
        Schema 1.0 and tools such as JAXB. In WP4's schemas we tried to follow the rule
        that "every element named <x/> must have exactly the same children requirements
        as all its siblings named <x/>". I will explain this in Warsaw.
         -->
        <!--
        Kai's comment: If I understand you correctly, that requirement would be met here:
        On any given XML document level, there will be 1 <id/> and 0..* <other-id/>.
        So <id/> never has siblings, and <other-id/> siblings always have the same
        sub-elements (but different type attribute)?
        -->
        <id>
            <!-- Mandatory -->
            <institution-id>uio.no</institution-id>
        </id>
        <other-id type="erasmus">
            <!-- Mandatory -->
            <institution-id>N Oslo01</institution-id>
        </other-id>
        <other-id type="local">
            <!-- Optional -->
            <institution-id>UIO</institution-id>
        </other-id>
        <erasmus-code>N Oslo01</erasmus-code>
        <name lang="en">University of Oslo</name>
        <name lang="no">Universitetet i Oslo</name>
        <!--
        Wojtek's comments:

        1. Aren't all these addresses "postal"? Perhaps we could find a better
        word than "type" here? Would type be an enumeration? Would this
        enumeration stay the same across different usages of the <address>
        element?

        2. Perhaps we should reuse existing schemas for that. There are many
        results for googling "xml schema for worldwide postal address". Or,
        maybe we should take the easiest way out and make it a string (as
        geocoding has become an easy task nowadays).
        -->
        <!--
        Kai's comments:

        1. It's common to distinguish between postal and visiting addresses:
           The former is where you send mail (which can be a p.o.box), while
           the latter is where to go physically (so must be a street address).
           I don't know what else to call it but "type", but I'm open to
           suggestions. I don't have strong opinions about how to encode the
           types, as long as it's a predefined value set. And yes, the coding
           would be the same across usages.

        2. Reusing existing schemas is fine by me. Actually, my first search
           result (http://xml.coverpages.org/HR-XML-PostalAddress-1_2.pdf)
           has a type attribute ;-) with the code set postOfficeBoxAddress,
           streetAddress and militaryAddress. The first two correspond to
           "postal" and "visiting".
        -->
        <address type="postOfficeBoxAddress">
            <box>Boks 1072</box>
            <city>Oslo</city>
            <post-code>0316</post-code>
        </address>
        <country>NO</country>
        <!--
        Wojtek's comment: What are the possible values of type? Can we have
        a single URL with many types? Is lang required?
        -->
        <!--
        Kai's comment: Some values are documented in the data model:
        Course Catalogue, Housing, Insurance, Visa (in some coding scheme).
        I am thinking that we could have a discussion and agree on a predefined
        set, possibly extendible. I think the same URL could have many types
        (more than one type of information could be documented on the same
        webpage). Anyway, this is up for discussion...
        I interpret your question about lang to be whether the attribute is required
        in the XML sense (not whether we need such an attribute at all). I think
        a language must be given, but I guess it could be optional with English as
        the default...
        -->
        <url lang="no" type="administrative">http://www.uio.no</url>
        <url lang="en" type="administrative">http://www.uio.no/en</url>
        <url lang="no" type="housing">http://www.uio.no/innkvartering</url>
        <url lang="no" type="insurance">http://www.uio.no/forsikring</url>
        <url lang="no" type="visa">http://www.uio.no/visum</url>
        <description lang="en">Blah blah</description>
        <description lang="no">Bla bla</description>
        <!-- Kai's comment: Can an institution participate in EWP without using ECTS? -->
        <use-ects>true</use-ects>
        <!--
        Wojtek's comment: A feature request! Logo URL! Preferably a large JPEG or PNG file
        on a white background with a fixed % of margin (e.g. 15%), but none of these suggestions
        would be required. We could use this for generating thumbnails in our UIs.
        -->
        <!--
        Kai's comment: Sure, that's just another URL type :-)
        -->
        <url type="logo">http://www.uio.no/logo.jpg</url>
        <!--
        Wojtek's comment: Data on facts sheets is missing. Initially in Oslo we have
        discussed many other elements to be included here, like housing information
        and IRO contacts. I have made some notes back then, they include on all the stuff
        everyone proposed, some of these seemed important:
        https://github.com/erasmus-without-paper/ewp-specs-api-institutions/commit/47b878d33e143da8501f7ba0d515b336837e16d5#diff-5bfd1cf6e5fb6f8e73184c993ebaf72bR30
        -->
        <!--
        Kai's comment: Yes - after generating the XML example, I only checked for
        completeness wrp. the data model, which is not a complete description. (Also, the check
        was a bit superficial, as I didn't follow all the relationships in the model). I include the
        missing elements below, but first some questions/comments on the proposed elements
        (NOTE: the iro section is almost empty at the moment, since most of it's elements have
        unanswered questions):
        - website (0..*): Called "url" here. I am not sure whether the "title" should be an attribute
          or a sub-element. (If the latter, the contents must be a separate sub-element, which
          seems a bit cumbersome)
        - phone/fax numbers/emails (0..*, generic, non-IRO related):
          By "generic, non-IRO related", do you mean just a list - or should they have a type
          attribute? If the latter, types could be the same as for URLs?
          Also, "fax" could be a phone type, or possibly another attribute...
        - IRO section
            First, I didn't know this was supposed to be a separate section. Maybe some of the
            URLs above belong here?
          - links to PDF documents (0..*, recommended):
            If these are meant to be instead of websites, we could use the URL elements above
            (ending in filename.pdf)? Otherwise, we need some type coding scheme, I guess
            (I would need some input for modeling this).
          - Lots of various text fields from fact sheets
            [...]
            Some examples of titles/sections taken from some PDF fact sheet:
            - nominations and applications for incoming erasmus students:
              Incoming from whose perspective? Server/home or client/host?
              If the latter, isn't this handled by the Mobilities API? (Nominations and applications
              are special cases of Mobility in the data model)
            - courses: Isn't this handled in the Courses/Course Search APIs?
            - credit system (it's always ECTS?): This is now implemented by the Boolean
              use-ects element above. Is it necessary to exchange data about other systems?
            - housing/insurance: Covered by URLs of the appropriate type.
            - study programme descriptions: I haven't seen any input on the modeling of this.
              In FS, Study Programmes belong to a Subject Area, but that may not be the case
              elsewhere?
            - language of instruction: I think this belongs in the Courses API?
            - language requirement (general): This has been moved to the cooperation-condition
              element in the IIAs API.
            - grading [table]: What is the difference between grading and grading table? Anyway,
              this is missing from the data model. Judging from the history of UiO, it could
              belong on the Subject Area (code) or Study Programme level, or maybe even on
              the Course level(!) In FS, grading rules are coded numerically (even if the actual
              grades are alphabetical like A-F), and the structure is something like this:
              - code (id)
              - code (best)
              - code (worst)
              - code (pass limit)
              - granularity (can only be != 1 for actual numeric grades)
              - description
            - exams: I can't see what this would mean on the Institution level?
            - expected arrival date: It seems this would belong in Academic Term?
            - living expenses, academic expenses, other expenses:
              Below, I have modeled these as text fields with a type attribute.
            - health insurance/facilities/student services/orientation/internships/
              career services/info dissemination:
              Are these supposed to be text/description fields? In that case, I would suggest
              the usual type attribute.
        -->
        <!--
        Wojtek's comment:
        I still have the same opinion on this as I had back in Oslo. I think that most of
        this stuff is - at this point in time - not important for electronic transfer, and
        that it should be included *only* in PDF version of the Fact Sheet. I would include
        only a couple of key elements in XML, such as email addresses and phone numbers,
        along with the names of mobility coordinators.
        -->
        <!--
        Kai's comment: Ok, something like this?
        -->
        <contacts>
            <!-- Optional attribute -->
            <contact type="housing">
                <family-name>Person</family-name>
                <given-names>Contact</given-names>
                <email>contact.person@uio.no</email>
                <phone>99999999</phone>
            </contact>
        </contacts>
        <departments>
            <organization-unit-id>fsat.no</organization-unit-id>
            <organization-unit-id>matnat.uio.no</organization-unit-id>
            <organization-unit-id>hf.uio.no</organization-unit-id>
        </departments>
        <url lang="en" type="iro">http://www.uio.no/iro/en</url>
        <phone type="housing">12345678</phone>
        <fax type="housing">87654321</fax>
        <email type="housing">innkvartering@uio.no</email>
        <email type="visa">visum@uio.no</email>
        <euc-no>12345</euc-no>
        <academic-terms>
            <academic-term>
                <year>2016</year>
                <term xml:lang="en-us">Fall</term>
                <term xml:lang="no">Høst</term>
                <start-date>2016-07-01</start-date>
                <end-date>2016-12-31</end-date>
            </academic-term>
            <academic-term>
                <year>2016</year>
                <term xml:lang="en-us">Spring</term>
                <term xml:lang="no">Vår</term>
                <start-date>2017-01-01</start-date>
                <end-date>2017-06-30</end-date>
            </academic-term>
        </academic-terms>
        <iro>
            <expenses type="living">500</expenses>
            <expenses type="academic">200</expenses>
            <expenses type="other">300</expenses>
        </iro>
    </institution>
</response>
